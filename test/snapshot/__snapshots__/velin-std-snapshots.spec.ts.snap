// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`attribute binding > binds attribute value 1`] = `
<input
  reflect-vln-attr:value="vln.text"
  value="hello"
/>
`;

exports[`attribute binding > binds multiple attributes 1`] = `
<input
  disabled="true"
  placeholder="Enter text"
  reflect-vln-attr:disabled="vln.isDisabled"
  reflect-vln-attr:placeholder="vln.hint"
  reflect-vln-attr:value="vln.text"
  value="value"
/>
`;

exports[`class binding > binds class object 1`] = `
<div
  class="active disabled"
  reflect-vln-class="{ active: vln.isActive, disabled: !vln.isEnabled }"
/>
`;

exports[`class binding > binds multiple classes with expressions 1`] = `
<div
  class="selected highlight"
  reflect-vln-class="{ selected: vln.index === vln.current, highlight: vln.priority > 5 }"
/>
`;

exports[`class binding > binds single class 1`] = `
<div
  class="active"
  reflect-vln-class="vln.className"
/>
`;

exports[`complex expressions > accesses nested properties 1`] = `
<div
  reflect-vln-text="vln.user.profile.name"
>
  John Doe
</div>
`;

exports[`complex expressions > calls methods with arguments 1`] = `
<div
  reflect-vln-text="vln.format(vln.value, 2)"
>
  3.14
</div>
`;

exports[`complex expressions > evaluates arithmetic 1`] = `
<div
  reflect-vln-text="(vln.a + vln.b) * vln.c"
>
  20
</div>
`;

exports[`complex expressions > evaluates logical expressions 1`] = `
<div
  reflect-vln-text="vln.isActive && vln.isEnabled ? "Yes" : "No""
>
  No
</div>
`;

exports[`complex expressions > uses array indexing 1`] = `
<div
  reflect-vln-text="vln.items[1]"
>
  second
</div>
`;

exports[`conditionals > hides when condition is false 1`] = `
<div>
  <span
    reflect-vln-if="vln.show"
    reflect-vln-text="vln.message"
    style="display: none;"
  >
    hidden
  </span>
</div>
`;

exports[`conditionals > renders complex condition 1`] = `
<div>
  <span
    reflect-vln-if="vln.count > 5 && vln.enabled"
    reflect-vln-text="vln.message"
  >
    shown
  </span>
</div>
`;

exports[`conditionals > renders when condition is true 1`] = `
<div>
  <span
    reflect-vln-if="vln.show"
    reflect-vln-text="vln.message"
  >
    visible
  </span>
</div>
`;

exports[`event handling > binds click event 1`] = `
<button
  reflect-vln-on:click="vln.handleClick"
>
  Click me
</button>
`;

exports[`loops > renders loop with index 1`] = `
<div>
  <!--vln-loop-->
</div>
`;

exports[`loops > renders nested loops 1`] = `
<div>
  
      
  <!--vln-loop-->
  
    
</div>
`;

exports[`loops > renders simple loop 1`] = `
<div>
  <!--vln-loop-->
</div>
`;

exports[`text binding > renders bound text 1`] = `
<div
  reflect-vln-text="vln.message"
>
  hello world
</div>
`;

exports[`text binding > renders text with expression 1`] = `
<div
  reflect-vln-text="vln.count + 1"
>
  6
</div>
`;

exports[`text binding > renders text with ternary 1`] = `
<div
  reflect-vln-text="vln.isActive ? "Active" : "Inactive""
>
  Active
</div>
`;

exports[`vln-less expressions > binds class object without vln prefix 1`] = `
<div
  class="active disabled"
  reflect-vln-class="{ active: isActive, disabled: !isEnabled }"
/>
`;

exports[`vln-less expressions > renders expression without vln prefix 1`] = `
<div
  reflect-vln-text="count + 1"
>
  6
</div>
`;

exports[`vln-less expressions > renders loop without vln prefix 1`] = `
<div>
  <!--vln-loop-->
</div>
`;

exports[`vln-less expressions > renders ternary without vln prefix 1`] = `
<div
  reflect-vln-text="isActive ? "Active" : "Inactive""
>
  Active
</div>
`;

exports[`vln-less expressions > renders text without vln prefix 1`] = `
<div
  reflect-vln-text="message"
>
  hello world
</div>
`;

exports[`vln-less expressions > supports mixed vln and no-vln in same expression 1`] = `
<div
  reflect-vln-text="vln.count + count"
>
  10
</div>
`;
